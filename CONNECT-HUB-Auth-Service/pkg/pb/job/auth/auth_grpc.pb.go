// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: pkg/pb/job/auth/auth.proto

package auth

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	JobAuth_GetDetailsById_FullMethodName         = "/job_auth.jobAuth/GetDetailsById"
	JobAuth_GetDetailsByIdRecuiter_FullMethodName = "/job_auth.jobAuth/GetDetailsByIdRecuiter"
)

// JobAuthClient is the client API for JobAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type JobAuthClient interface {
	GetDetailsById(ctx context.Context, in *GetDetailsByIdRequest, opts ...grpc.CallOption) (*GetDetailsByIdResponse, error)
	GetDetailsByIdRecuiter(ctx context.Context, in *GetDetailsByIdRequest, opts ...grpc.CallOption) (*GetDetailsByIdResponse, error)
}

type jobAuthClient struct {
	cc grpc.ClientConnInterface
}

func NewJobAuthClient(cc grpc.ClientConnInterface) JobAuthClient {
	return &jobAuthClient{cc}
}

func (c *jobAuthClient) GetDetailsById(ctx context.Context, in *GetDetailsByIdRequest, opts ...grpc.CallOption) (*GetDetailsByIdResponse, error) {
	out := new(GetDetailsByIdResponse)
	err := c.cc.Invoke(ctx, JobAuth_GetDetailsById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobAuthClient) GetDetailsByIdRecuiter(ctx context.Context, in *GetDetailsByIdRequest, opts ...grpc.CallOption) (*GetDetailsByIdResponse, error) {
	out := new(GetDetailsByIdResponse)
	err := c.cc.Invoke(ctx, JobAuth_GetDetailsByIdRecuiter_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobAuthServer is the server API for JobAuth service.
// All implementations must embed UnimplementedJobAuthServer
// for forward compatibility
type JobAuthServer interface {
	GetDetailsById(context.Context, *GetDetailsByIdRequest) (*GetDetailsByIdResponse, error)
	GetDetailsByIdRecuiter(context.Context, *GetDetailsByIdRequest) (*GetDetailsByIdResponse, error)
	mustEmbedUnimplementedJobAuthServer()
}

// UnimplementedJobAuthServer must be embedded to have forward compatible implementations.
type UnimplementedJobAuthServer struct {
}

func (UnimplementedJobAuthServer) GetDetailsById(context.Context, *GetDetailsByIdRequest) (*GetDetailsByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailsById not implemented")
}
func (UnimplementedJobAuthServer) GetDetailsByIdRecuiter(context.Context, *GetDetailsByIdRequest) (*GetDetailsByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailsByIdRecuiter not implemented")
}
func (UnimplementedJobAuthServer) mustEmbedUnimplementedJobAuthServer() {}

// UnsafeJobAuthServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to JobAuthServer will
// result in compilation errors.
type UnsafeJobAuthServer interface {
	mustEmbedUnimplementedJobAuthServer()
}

func RegisterJobAuthServer(s grpc.ServiceRegistrar, srv JobAuthServer) {
	s.RegisterService(&JobAuth_ServiceDesc, srv)
}

func _JobAuth_GetDetailsById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailsByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobAuthServer).GetDetailsById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobAuth_GetDetailsById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobAuthServer).GetDetailsById(ctx, req.(*GetDetailsByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobAuth_GetDetailsByIdRecuiter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailsByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobAuthServer).GetDetailsByIdRecuiter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: JobAuth_GetDetailsByIdRecuiter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobAuthServer).GetDetailsByIdRecuiter(ctx, req.(*GetDetailsByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// JobAuth_ServiceDesc is the grpc.ServiceDesc for JobAuth service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var JobAuth_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "job_auth.jobAuth",
	HandlerType: (*JobAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDetailsById",
			Handler:    _JobAuth_GetDetailsById_Handler,
		},
		{
			MethodName: "GetDetailsByIdRecuiter",
			Handler:    _JobAuth_GetDetailsByIdRecuiter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/pb/job/auth/auth.proto",
}
