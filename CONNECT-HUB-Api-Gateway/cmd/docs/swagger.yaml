definitions:
  models.AdminLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.ChatRequest:
    properties:
      friendID:
        type: string
      limit:
        type: string
      offset:
        type: string
    required:
    - friendID
    - limit
    - offset
    type: object
  models.CreateCommentPostReq:
    properties:
      comment:
        type: string
      post_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.CreatePolicyReq:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  models.DeleteCommentPostReq:
    properties:
      comment_id:
        type: integer
      post_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.JobOpeningReq:
    properties:
      application_deadline:
        type: string
      description:
        type: string
      education_level:
        type: string
      employment_type:
        type: string
      experience_level:
        type: string
      location:
        type: string
      requirements:
        type: string
      salary:
        type: string
      skills_required:
        type: string
      title:
        type: string
    type: object
  models.JobSeekerLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.JobSeekerProfileReq:
    properties:
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  models.JobSeekerSignUp:
    properties:
      confirm_password:
        maxLength: 20
        minLength: 6
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
      phone_number:
        type: string
    required:
    - confirm_password
    - email
    - password
    type: object
  models.RecruiterLogin:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.RecruiterProfileReq:
    properties:
      about_company:
        type: string
      company_name:
        type: string
      company_size:
        type: integer
      contact_email:
        type: string
      contact_phone_number:
        type: integer
      headquarters_address:
        type: string
      id:
        type: integer
      industry:
        type: string
      website:
        type: string
    type: object
  models.RecruiterSignUp:
    properties:
      about_company:
        type: string
      company_name:
        type: string
      company_size:
        type: integer
      confirm_password:
        type: string
      contact_email:
        type: string
      contact_phone_number:
        type: integer
      headquarters_address:
        type: string
      industry:
        type: string
      password:
        type: string
      website:
        type: string
    type: object
  models.ScheduleReqs:
    properties:
      application_id:
        type: integer
      date_and_time:
        type: string
      link:
        type: string
      mode:
        type: string
    type: object
  models.UpdateCommentPostReq:
    properties:
      comment:
        type: string
      comment_id:
        type: integer
      post_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.UpdatePolicyReq:
    properties:
      content:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact:
    name: API Support
  description: ConnectHub is a professional networking platform.
  title: Go + Gin professional networking platform API Connect Hub
  version: 1.0.0
paths:
  /admin/jobseeker:
    get:
      consumes:
      - application/json
      description: Retrieve the details of a jobseeker based on the provided ID
      parameters:
      - description: Jobseeker ID to get details
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Jobseeker details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid jobseeker ID or failed to retrieve jobseeker details
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get jobseeker details
      tags:
      - Admin Jobseeker Management
  /admin/jobseeker/all:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of jobseekers
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved jobseekers
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid page number or constraints not satisfied
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to retrieve jobseekers due to internal error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get jobseekers
      tags:
      - Admin Jobseeker Management
  /admin/jobseeker/block:
    patch:
      consumes:
      - application/json
      description: Block a jobseeker based on the provided ID
      parameters:
      - description: Jobseeker ID to block
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Jobseeker blocked successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid jobseeker ID or failed to block jobseeker
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Block a jobseeker
      tags:
      - Admin Jobseeker Management
  /admin/jobseeker/unblock:
    patch:
      consumes:
      - application/json
      description: Unblock a jobseeker based on the provided ID
      parameters:
      - description: Jobseeker ID to unblock
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Jobseeker unblocked successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid jobseeker ID or failed to unblock jobseeker
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Unblock a jobseeker
      tags:
      - Admin Jobseeker Management
  /admin/login:
    post:
      consumes:
      - application/json
      description: Authenticate an admin and get access token
      parameters:
      - description: Admin credentials for login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Admin login successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request or constraints not satisfied
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 'Unauthorized: cannot authenticate user'
          schema:
            $ref: '#/definitions/response.Response'
      summary: Admin login
      tags:
      - Admin Authentication Management
  /admin/policies:
    get:
      consumes:
      - application/json
      description: Retrieves all existing policies
      produces:
      - application/json
      responses:
        "200":
          description: Policies retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve policies
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve all policies
      tags:
      - Admin Policy Management
  /admin/policy:
    delete:
      consumes:
      - application/json
      description: Delete a policy based on the provided ID
      parameters:
      - description: Policy ID to delete
        in: query
        name: policy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Policy deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid policy ID or failed to delete policy
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete a policy
      tags:
      - Admin Policy Management
    get:
      consumes:
      - application/json
      description: Retrieves a policy based on the provided ID
      parameters:
      - description: Policy ID to retrieve
        in: query
        name: policy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Policy retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid policy ID or failed to retrieve policy
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Retrieve a policy
      tags:
      - Admin Policy Management
    post:
      consumes:
      - application/json
      description: Create a new policy based on the provided data
      parameters:
      - description: Policy data
        in: body
        name: policy
        required: true
        schema:
          $ref: '#/definitions/models.CreatePolicyReq'
      produces:
      - application/json
      responses:
        "200":
          description: Policy created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid policy data or failed to create policy
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Create a new policy
      tags:
      - Admin Policy Management
    put:
      consumes:
      - application/json
      description: Update an existing policy based on the provided data
      parameters:
      - description: Updated policy data
        in: body
        name: policy
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePolicyReq'
      produces:
      - application/json
      responses:
        "200":
          description: Policy updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid policy data or failed to update policy
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Update an existing policy
      tags:
      - Admin Policy Management
  /admin/recruiter:
    get:
      consumes:
      - application/json
      description: Retrieve the details of a recruiter based on the provided ID
      parameters:
      - description: Recruiter ID to get details
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Recruiter details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid recruiter ID or failed to retrieve recruiter details
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get recruiter details
      tags:
      - Admin Recruiter Management
  /admin/recruiter/all:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of recruiters
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved recruiters
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid page number or constraints not satisfied
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to retrieve recruiters due to internal error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get recruiters
      tags:
      - Admin Recruiter Management
  /admin/recruiter/block:
    patch:
      consumes:
      - application/json
      description: Block a recruiter based on the provided ID
      parameters:
      - description: Recruiter ID to block
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Recruiter blocked successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid recruiter ID or failed to block recruiter
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Block a recruiter
      tags:
      - Admin Recruiter Management
  /admin/recruiter/unblock:
    patch:
      consumes:
      - application/json
      description: Unblock a recruiter based on the provided ID
      parameters:
      - description: Recruiter ID to unblock
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Recruiter unblocked successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid recruiter ID or failed to unblock recruiter
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Unblock a recruiter
      tags:
      - Admin Recruiter Management
  /jobseeker/appliedjobs:
    get:
      consumes:
      - application/json
      description: Retrieve the jobs that a job seeker has applied for
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved applied jobs
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve applied jobs: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to retrieve applied jobs'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get applied jobs
      tags:
      - Jobseeker Job Management
  /jobseeker/chat/message:
    post:
      consumes:
      - application/json
      description: Retrieves chat details based on the provided request.
      parameters:
      - description: User ID
        in: header
        name: id
        required: true
        type: integer
      - description: Chat Request Data
        in: body
        name: chatRequest
        required: true
        schema:
          $ref: '#/definitions/models.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Chat details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve chat details or incorrect data format
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get Chat Details
      tags:
      - Jobseeker Chat Management
  /jobseeker/job:
    get:
      consumes:
      - application/json
      description: Retrieve the details of a job by its ID for job seekers
      parameters:
      - description: ID of the job to retrieve
        in: query
        name: job_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved job
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve job: job_id parameter is required or conversion
            failed'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to fetch job'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get job by ID for job seeker
      tags:
      - Jobseeker Job Management
    post:
      consumes:
      - multipart/form-data
      description: Apply for a job as a job seeker
      parameters:
      - description: ID of the job to apply for
        in: formData
        name: job_id
        required: true
        type: integer
      - description: Cover letter for the job application
        in: formData
        name: cover_letter
        required: true
        type: string
      - description: Resume for the job application
        in: formData
        name: resume
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Job applied successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to apply for the job: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to apply for the job'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Apply for a job
      tags:
      - Jobseeker Job Management
  /jobseeker/jobs:
    get:
      consumes:
      - application/json
      description: Retrieve all jobs matching the provided keyword for job seekers
      parameters:
      - description: Keyword to search for jobs
        in: query
        name: Keyword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved jobs
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve jobs: keyword parameter is required'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to fetch jobs'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get all jobs for job seeker
      tags:
      - Jobseeker Job Management
  /jobseeker/login:
    post:
      consumes:
      - application/json
      description: Allows a job seeker to log in by providing necessary credentials.
      parameters:
      - description: Job Seeker Login Data
        in: body
        name: jobseekerData
        required: true
        schema:
          $ref: '#/definitions/models.JobSeekerLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Jobseeker authenticated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Incorrect data format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Job Seeker Login
      tags:
      - Jobseeker Authentication Management
  /jobseeker/policies:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all policies.
      produces:
      - application/json
      responses:
        "200":
          description: Policies retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve policies
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get All Policies
      tags:
      - Jobseeker Policies Management
  /jobseeker/policy:
    get:
      consumes:
      - application/json
      description: Retrieves a specific policy by its ID.
      parameters:
      - description: Policy ID
        in: query
        name: policy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Policy retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve policy
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get One Policy
      tags:
      - Jobseeker Policies Management
  /jobseeker/post:
    delete:
      consumes:
      - application/json
      description: Deletes an existing post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the post to delete
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to delete post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete post
      tags:
      - Jobseeker Post Management
    get:
      consumes:
      - application/json
      description: Retrieve a single post by its ID
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the post to retrieve
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to get post: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to get post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get a Post by ID
      tags:
      - Jobseeker Post Management
    patch:
      consumes:
      - multipart/form-data
      description: Updates an existing post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the post to update
        in: formData
        name: post_id
        required: true
        type: integer
      - description: Title of the post
        in: formData
        name: title
        required: true
        type: string
      - description: Content of the post
        in: formData
        name: content
        required: true
        type: string
      - description: Image for the post
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to update post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Update post
      tags:
      - Jobseeker Post Management
    post:
      consumes:
      - application/json
      description: Create a new post by a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Title of the post
        in: formData
        name: title
        required: true
        type: string
      - description: Content of the post
        in: formData
        name: content
        required: true
        type: string
      - description: Image file for the post
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Post created successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to create post: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to create post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Create a post
      tags:
      - Jobseeker Post Management
  /jobseeker/post/comment:
    delete:
      consumes:
      - application/json
      description: Deletes a comment on an existing post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment deletion details
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.DeleteCommentPostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted comment from the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to delete comment from the post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete comment on post
      tags:
      - Jobseeker Post Management
    post:
      consumes:
      - application/json
      description: Adds a comment to an existing post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment details
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CreateCommentPostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added comment to the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to add comment to the post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Create comment on post
      tags:
      - Jobseeker Post Management
    put:
      consumes:
      - application/json
      description: Updates a comment on an existing post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Updated comment details
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCommentPostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated comment on the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to update comment on the post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Update comment on post
      tags:
      - Jobseeker Post Management
  /jobseeker/post/like:
    delete:
      consumes:
      - application/json
      description: Removes a like from a post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the post to remove like
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully removed like from the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to remove like from the post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Remove like from post
      tags:
      - Jobseeker Post Management
    post:
      consumes:
      - application/json
      description: Adds a like to a post for a jobseeker
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the post to like
        in: query
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added like to the post
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Bad request: invalid input parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to add like to the post'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Add like to post
      tags:
      - Jobseeker Post Management
  /jobseeker/posts:
    get:
      consumes:
      - application/json
      description: Retrieves all posts for jobseekers
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all posts
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to retrieve posts'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get all posts
      tags:
      - Jobseeker Post Management
  /jobseeker/profile:
    get:
      consumes:
      - application/json
      description: Retrieves the profile of the logged-in job seeker.
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Incorrect data format or failed to retrieve profile
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get Job Seeker Profile
      tags:
      - Jobseeker Profile Management
    patch:
      consumes:
      - application/json
      description: Allows a job seeker to edit their profile by providing necessary
        information.
      parameters:
      - description: Job Seeker Profile Data
        in: body
        name: jobseekerData
        required: true
        schema:
          $ref: '#/definitions/models.JobSeekerProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: Profile edited successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Incorrect data format or failed to edit profile
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Edit Job Seeker Profile
      tags:
      - Jobseeker Profile Management
  /jobseeker/signup:
    post:
      consumes:
      - application/json
      description: Allows a job seeker to sign up by providing necessary information.
      parameters:
      - description: Job Seeker Sign Up Data
        in: body
        name: jobseekerData
        required: true
        schema:
          $ref: '#/definitions/models.JobSeekerSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: Jobseeker signup successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Incorrect data format
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Job Seeker Signup
      tags:
      - Jobseeker Authentication Management
  /notifications:
    get:
      consumes:
      - application/json
      description: Retrieves notifications for a user with pagination support
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 'Number of notifications to retrieve (default: 1)'
        in: query
        name: limit
        type: integer
      - description: 'Offset for pagination (default: 10)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved notifications
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve notifications: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to retrieve notifications'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get notifications
      tags:
      - Jobseeker Notification Management
    patch:
      consumes:
      - application/json
      description: Marks a notification as read
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Notification ID
        in: query
        name: notification_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Notification successfully marked as read
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to mark notification as read: missing or incorrect
            parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to mark notification as read'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Read notification
      tags:
      - Jobseeker Notification Management
  /notifications/all:
    get:
      consumes:
      - application/json
      description: Retrieves all notifications for a user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all notifications
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve notifications: User ID not found or incorrect
            parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to retrieve notifications'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get all notifications
      tags:
      - Jobseeker Notification Management
    patch:
      consumes:
      - application/json
      description: Marks all notifications as read for a user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Notifications successfully marked as read
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to mark notifications as read: User ID not found or
            incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to mark notifications as read'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Mark all notifications as read
      tags:
      - Jobseeker Notification Management
  /recruiter/appliedjob:
    post:
      consumes:
      - application/json
      description: Schedule an interview by a recruiter for a job applicant
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Schedule details
        in: body
        name: jobSchedule
        required: true
        schema:
          $ref: '#/definitions/models.ScheduleReqs'
      produces:
      - application/json
      responses:
        "200":
          description: Interview scheduled successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to schedule interview: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to schedule interview'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Schedule interview
      tags:
      - Recruiter Job Management
  /recruiter/appliedjobs:
    get:
      consumes:
      - application/json
      description: Retrieves the candidates who applied for a job posted by a recruiter
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Applied candidates retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to get applied candidates: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to get applied candidates'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get applied candidates for a job
      tags:
      - Recruiter Job Management
  /recruiter/chat/message:
    post:
      consumes:
      - application/json
      description: Retrieves chat details based on the provided request.
      parameters:
      - description: User ID
        in: header
        name: id
        required: true
        type: integer
      - description: Chat Request Data
        in: body
        name: chatRequest
        required: true
        schema:
          $ref: '#/definitions/models.ChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Chat details retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve chat details or incorrect data format
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get Chat Details
      tags:
      - Recruiter Chat Management
  /recruiter/interview:
    delete:
      consumes:
      - application/json
      description: Cancel a scheduled interview by a recruiter
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Application ID
        in: query
        name: app_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Interview schedule canceled successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to cancel interview schedule: missing or incorrect
            parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to cancel interview schedule'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Cancel scheduled interview
      tags:
      - Recruiter Job Management
  /recruiter/job:
    delete:
      consumes:
      - application/json
      description: Delete a job posted by a recruiter
      parameters:
      - description: ID of the job to delete
        in: query
        name: job_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job successfully deleted
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to delete job: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to delete job'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete a job
      tags:
      - Recruiter Job Management
    get:
      consumes:
      - application/json
      description: Retrieve the details of a single job posted by a recruiter
      parameters:
      - description: ID of the job to retrieve
        in: query
        name: job_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved job
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve job: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to retrieve job'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get one job
      tags:
      - Recruiter Job Management
    post:
      consumes:
      - application/json
      description: Create a new job posting by a recruiter
      parameters:
      - description: Job opening data for posting
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.JobOpeningReq'
      produces:
      - application/json
      responses:
        "200":
          description: Job posted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to post job: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to post job'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Create job posting
      tags:
      - Recruiter Job Management
    put:
      consumes:
      - application/json
      description: Update a job posted by a recruiter
      parameters:
      - description: ID of the job to update
        in: query
        name: job_id
        required: true
        type: integer
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Updated job details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.JobOpeningReq'
      produces:
      - application/json
      responses:
        "200":
          description: Job successfully updated
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to update job: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to update job'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Update a job
      tags:
      - Recruiter Job Management
  /recruiter/jobs:
    get:
      consumes:
      - application/json
      description: Retrieve all jobs posted by a recruiter
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved jobs
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 'Failed to retrieve jobs: missing or incorrect parameters'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to retrieve jobs'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get all jobs
      tags:
      - Recruiter Job Management
  /recruiter/login:
    post:
      consumes:
      - application/json
      description: Authenticate a recruiter
      parameters:
      - description: Recruiter credentials for login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RecruiterLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Recruiter login successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Incorrect request format or missing required fields
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to authenticate recruiter'
          schema:
            $ref: '#/definitions/response.Response'
      summary: Recruiter login
      tags:
      - Recruiter Authentication Management
  /recruiter/policies:
    get:
      consumes:
      - application/json
      description: Retrieves all policies from the system.
      produces:
      - application/json
      responses:
        "200":
          description: All policies retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve policies
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get All Policies
      tags:
      - Recruiter Policy Management
  /recruiter/policy:
    get:
      consumes:
      - application/json
      description: Retrieves a single policy based on the provided policy ID.
      parameters:
      - description: Policy ID
        in: query
        name: policy_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Policy retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve policy or incorrect data format
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get One Policy
      tags:
      - Recruiter Policy Management
  /recruiter/profile:
    get:
      consumes:
      - application/json
      description: Retrieves the profile of the logged-in recruiter.
      produces:
      - application/json
      responses:
        "200":
          description: Profile retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to retrieve profile
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Get Recruiter Profile
      tags:
      - Recruiter Profile Management
    patch:
      consumes:
      - application/json
      description: Allows a recruiter to edit their profile information.
      parameters:
      - description: Recruiter ID
        in: path
        name: id
        required: true
        type: integer
      - description: Recruiter Profile Data
        in: body
        name: recruiterData
        required: true
        schema:
          $ref: '#/definitions/models.RecruiterProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: Recruiter profile updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Failed to update profile
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Edit Recruiter Profile
      tags:
      - Recruiter Profile Management
  /recruiter/signup:
    post:
      consumes:
      - application/json
      description: Register a new recruiter
      parameters:
      - description: Recruiter signup data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RecruiterSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: Recruiter signup successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Incorrect request format or missing required fields
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal server error: failed to signup recruiter'
          schema:
            $ref: '#/definitions/response.Response'
      summary: Recruiter signup
      tags:
      - Recruiter Authentication Management
  /recruiter/video-call/key:
    get:
      consumes:
      - application/json
      description: Generate a video call key and private link for interview.
      parameters:
      - description: 'User ID of the jobseeker '
        in: query
        name: user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved video call key and private link
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user ID format or role mismatch
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 'Unauthorized: Only recruiters can access this endpoint'
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 'Internal Server Error: Failed to generate video call key'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerTokenAuth: []
      summary: Generate Video Call Key
      tags:
      - Recruiter Videocall Management
securityDefinitions:
  BearerTokenAuth:
    description: 'For accessing the API, you need to include "Jobseeker","Admin" or
      "Recruiter" before your token in the Authorization header. Example: "Authorization:
      Admin <your_token>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
