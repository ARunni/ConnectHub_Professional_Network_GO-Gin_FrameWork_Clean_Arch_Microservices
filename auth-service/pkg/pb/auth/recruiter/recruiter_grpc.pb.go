// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: pkg/pb/auth/recruiter/recruiter.proto

package recruiter

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Recruiter_RecruiterSignup_FullMethodName = "/recruiterauth.Recruiter/RecruiterSignup"
	Recruiter_RecruiterLogin_FullMethodName  = "/recruiterauth.Recruiter/RecruiterLogin"
	Recruiter_PostJobOpening_FullMethodName  = "/recruiterauth.Recruiter/PostJobOpening"
)

// RecruiterClient is the client API for Recruiter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RecruiterClient interface {
	RecruiterSignup(ctx context.Context, in *RecruiterSignupRequest, opts ...grpc.CallOption) (*RecruiterSignupResponse, error)
	RecruiterLogin(ctx context.Context, in *RecruiterLoginInRequest, opts ...grpc.CallOption) (*RecruiterLoginResponse, error)
	PostJobOpening(ctx context.Context, in *PostJobOpeningRequest, opts ...grpc.CallOption) (*PostJobOpeningResponse, error)
}

type recruiterClient struct {
	cc grpc.ClientConnInterface
}

func NewRecruiterClient(cc grpc.ClientConnInterface) RecruiterClient {
	return &recruiterClient{cc}
}

func (c *recruiterClient) RecruiterSignup(ctx context.Context, in *RecruiterSignupRequest, opts ...grpc.CallOption) (*RecruiterSignupResponse, error) {
	out := new(RecruiterSignupResponse)
	err := c.cc.Invoke(ctx, Recruiter_RecruiterSignup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruiterClient) RecruiterLogin(ctx context.Context, in *RecruiterLoginInRequest, opts ...grpc.CallOption) (*RecruiterLoginResponse, error) {
	out := new(RecruiterLoginResponse)
	err := c.cc.Invoke(ctx, Recruiter_RecruiterLogin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recruiterClient) PostJobOpening(ctx context.Context, in *PostJobOpeningRequest, opts ...grpc.CallOption) (*PostJobOpeningResponse, error) {
	out := new(PostJobOpeningResponse)
	err := c.cc.Invoke(ctx, Recruiter_PostJobOpening_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecruiterServer is the server API for Recruiter service.
// All implementations must embed UnimplementedRecruiterServer
// for forward compatibility
type RecruiterServer interface {
	RecruiterSignup(context.Context, *RecruiterSignupRequest) (*RecruiterSignupResponse, error)
	RecruiterLogin(context.Context, *RecruiterLoginInRequest) (*RecruiterLoginResponse, error)
	PostJobOpening(context.Context, *PostJobOpeningRequest) (*PostJobOpeningResponse, error)
	mustEmbedUnimplementedRecruiterServer()
}

// UnimplementedRecruiterServer must be embedded to have forward compatible implementations.
type UnimplementedRecruiterServer struct {
}

func (UnimplementedRecruiterServer) RecruiterSignup(context.Context, *RecruiterSignupRequest) (*RecruiterSignupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecruiterSignup not implemented")
}
func (UnimplementedRecruiterServer) RecruiterLogin(context.Context, *RecruiterLoginInRequest) (*RecruiterLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecruiterLogin not implemented")
}
func (UnimplementedRecruiterServer) PostJobOpening(context.Context, *PostJobOpeningRequest) (*PostJobOpeningResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostJobOpening not implemented")
}
func (UnimplementedRecruiterServer) mustEmbedUnimplementedRecruiterServer() {}

// UnsafeRecruiterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RecruiterServer will
// result in compilation errors.
type UnsafeRecruiterServer interface {
	mustEmbedUnimplementedRecruiterServer()
}

func RegisterRecruiterServer(s grpc.ServiceRegistrar, srv RecruiterServer) {
	s.RegisterService(&Recruiter_ServiceDesc, srv)
}

func _Recruiter_RecruiterSignup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecruiterSignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServer).RecruiterSignup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Recruiter_RecruiterSignup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServer).RecruiterSignup(ctx, req.(*RecruiterSignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recruiter_RecruiterLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecruiterLoginInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServer).RecruiterLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Recruiter_RecruiterLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServer).RecruiterLogin(ctx, req.(*RecruiterLoginInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recruiter_PostJobOpening_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostJobOpeningRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecruiterServer).PostJobOpening(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Recruiter_PostJobOpening_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecruiterServer).PostJobOpening(ctx, req.(*PostJobOpeningRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Recruiter_ServiceDesc is the grpc.ServiceDesc for Recruiter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Recruiter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "recruiterauth.Recruiter",
	HandlerType: (*RecruiterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecruiterSignup",
			Handler:    _Recruiter_RecruiterSignup_Handler,
		},
		{
			MethodName: "RecruiterLogin",
			Handler:    _Recruiter_RecruiterLogin_Handler,
		},
		{
			MethodName: "PostJobOpening",
			Handler:    _Recruiter_PostJobOpening_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/pb/auth/recruiter/recruiter.proto",
}
